{"name":"Environ","tagline":"OOP access to environment variables in Ruby","body":"# Environ\r\n\r\nEnviron is a Ruby gem that lets you access environment variables in an object oriented manner.  Instead of using `ENV['VARIABLE']`, Environ lets you do `Environ.env_variable`.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'environ'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install environ\r\n\r\n## Usage\r\n\r\nLet's say you want to access the PATH variable.  You could do:\r\n\r\n    ENV['PATH']\r\n\r\nWith Environ, you can access it OOP style with:\r\n\r\n    Environ.env_path\r\n\r\nYou can also set values if you need to:\r\n\r\n    Environ.env_path = 'new_path'\r\n\r\nIf you set a variable and need to reset everything, you can call:\r\n\r\n    Environ.reset!\r\n\r\nYou can also access all the keys in the environment with:\r\n\r\n    Environ.all\r\n\r\nThis will return a hash of all the environment variables.\r\n\r\nIf you choose to live on the edge, you can also disable no-conflict support and access variables directly by their ENV name:\r\n\r\n    Environ.no_conflict = false\r\n    path = Environ.path\r\n\r\nNo conflict is true by default to prevent unexpected results.\r\n\r\nFinally, Environ respects accessing variables that may not be set.  If you call something like `Environ.env_doesnt_exist` it will return nil rather than throw an exception.\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release` to create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/mondok/environ/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}